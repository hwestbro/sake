
##
## This is to test the import/include funcionality
##

#< config.yaml
###< optional.yaml or this was optional anyways
#< optional.yaml optional

#! CFLAGS=-Wall -O2 -I./include
#! LDFLAGS=-lm

compile objects:
    help: compile all c files into object files
    compile graphfuncs:
        help: compiles the graphing functions
        dependencies:
            - ./graphfuncs.c
        formula: >
            $CC -c -o graphfuncs.o graphfuncs.c $CFLAGS
        output:
            - graphfuncs.o

    compile infuncs:
        help: compiles the input functions
        dependencies:
            - ./infuncs.c
        formula: >
            $CC -c -o infuncs.o infuncs.c $CFLAGS
        output:
            - infuncs.o

    compile statfuncs:
        help: compiles the statistics functions
        dependencies:
            - ./statfuncs.c
        formula: >
            $CC -c -o statfuncs.o statfuncs.c $CFLAGS
        output:
            - statfuncs.o

    compile qstats driver:
        help: compiles the qstats driver c program
        (ignore) note: this is the driver
        dependencies:
            - ./qstats.c
        formula: >
            $CC -c -o qstats.o qstats.c $CFLAGS
        output:
            - qstats.o

build binary:
    help: uses the object files and compiles the final qstats binary
    dependencies:
        - ./statfuncs.o
        - ./infuncs.o
        - ./graphfuncs.o
        - ./qstats.o
    formula: >
        $CC -o qstats qstats.o statfuncs.o infuncs.o graphfuncs.o $CFLAGS $LDFLAGS
    output:
        - qstats

generate html documentation:
    help: uses pandoc to generate html documentation from markdown
    dependencies:
        - ./qstats.md
    formula: >
        pandoc -f markdown -t html qstats.md -o qstats-documentation.html
    output:
        - qstats-documentation.html

package it:
    help: takes the final binary and documentation and puts it in a tarball
    dependencies:
        - qstats-documentation.html
        - qstats
    formula: >
        mkdir qstats-v1.0;
        cp qstats qstats-v1.0;
        cp qstats-documentation.html qstats-v1.0;
        tar cvfz qstats.tar.gz qstats-v1.0 > /dev/null 2>&1;
        rm -rf qstats-v1.0;
    output:
        - qstats.tar.gz


output wrapper:
    help: >
        this is a wrapper around 'output version text file' to
        appropriately test the entire API
    output version text file:
        help: >
            this is a silly target that outputs the qstats version
            ascii-art printed, it is needed to test the whole API
        dependencies:
            - qstats-documentation.html
        formula: >
            bash -c "cat <(echo -n 'qstats version ') <(cat qstats-documentation.html | grep version | perl -pe 's/.*version (.+?)\)<.*/\1/') | figlet > VERSION.txt"
        output:
            - VERSION.txt

ensure version match:
    help: >
        this is to ensure that the version from qstats.c matches
        the version in the html output
    dependencies:
        - qstats.c
        - qstats-documentation.html
    formula: >
        ./ensure_version_match.sh
    output:
