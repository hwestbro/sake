{"name":"Sake","tagline":"A self-documenting build automation tool","body":"### What is it?\r\nSake is a way to easily design, share, build, and visualize workflows with \r\nintricate interdependencies. Sake is self-documenting because the \r\ninstructions for building a project also serve as the documentation of the \r\nprojects' workflow. The first time it's run, sake will build the whole \r\nproject in an order that automatically satisfies all dependencies. For all \r\nsubsequent runs, sake will only rebuild the parts of the project that depend \r\non _changed_ files. This cuts down on unnecessary re-building and letâ€™s you \r\nconcentrate on your work rather than memorizing the order in which commands \r\nhave to be run.\r\n\r\nSake is free, open source software under a very permissive license (MIT Expat)\r\nand is written in python.\r\n\r\n### Examples\r\n\r\nConsider this example workflow that examines correlates of DUI arrests with various adolescent-related data by state.\r\n\r\n```yaml\r\n---\r\n# Macros\r\n#! TEEN_STATS_URL=http://mathforum.org/workshops/sum96/data.collections/datalibrary/US_TeenStats.XL.zip.xls\r\n\r\nfetch teen stats:\r\n    help: fetches various teen statstics from the web\r\n    # no dependencies\r\n    formula: >\r\n        curl -o teenstats.xls $TEEN_STATS_URL;\r\n    output:\r\n        - teenstats.xls\r\n \r\nformatting:\r\n    help: formatting and conversion steps\r\n    convert teen stats to csv:\r\n        help: uses gnumerics ssconvert to convert ugly xls to csv and cleans it\r\n        dependencies:\r\n            - teenstats.xls\r\n            - convert.sh\r\n        formula: >\r\n            ./convert.sh;\r\n        output:\r\n            - teenstats.csv\r\n    format dui stats:\r\n        help: format raw (copy and pasted) dui/state data using perl\r\n        dependencies:\r\n            - rawdata.txt\r\n        formula: >\r\n            perl -pe 's/^(\\D+)\\s+([\\d,]+)\\s+([\\d,]+)\\s*/\\1\\t\\2\\t\\3\\n/'\r\n            rawdata.txt | sed 's/,//g' > duistats.tsv;\r\n        output:\r\n            - duistats.tsv\r\n \r\nfind correlates:\r\n    help: calls R script that finds correlated of DUI arrest in various teen statistics\r\n    dependencies:\r\n        - duistats.tsv\r\n        - teenstats.csv\r\n        - dui-correlates.R\r\n    formula: >\r\n        ./dui-correlates.R\r\n    output:\r\n        - Rplots.pdf\r\n        - lmcoeffs.txt\r\n...\r\n```\r\n\r\nThis is an Sakefile to build/document a process that processes and formats two data files from the web and feeds it into an R script that searches for correlations and, ultimately, produces an output table and a graphic.\r\n\r\nThe entire process can be performed, start to finish by running the following command:\r\n```\r\nsake\r\n```\r\n\r\nThe mandatory \"help\" fields are used internally by sake to produce the following output when \r\n```\r\nsake help\r\n```\r\nis run\r\n```\r\nYou can 'sake' one of the following...\r\n\r\n\"find correlates\":\r\n  - calls R script that finds correlated of DUI arrest in various teen statistics\r\n\r\nformatting:\r\n  - formatting and conversion steps\r\n\r\n    \"convert teen stats to csv\":\r\n      -  uses gnumerics ssconvert to convert ugly xls to csv and cleans it\r\n    \"format dui stats\":\r\n      -  format raw (copy and pasted) dui/state data using perl\r\n\r\n\"fetch teen stats\":\r\n  - fetches various teen statstics from the web\r\n\r\nclean:\r\n  -  remove all targets' outputs and start from scratch\r\n\r\nvisual:\r\n  -  output visual representation of project's dependencies\r\n```\r\n\r\nFinally, a visual representation of the dependency diagram can be produced, automagically, by running the following command\r\n```\r\nsake visual\r\n```\r\nWhich produces the following image![Automagic dependency visualization](http://www.onthelambda.com/wp-content/uploads/2013/12/dependency-visualization.png)\r\n\r\nThis is a really simple example, sure, but it's easy to see that, even for the most labyrinthine of pipelines, that a visualization like this can really help get a sense all the actions involved in a workflow. The key points here are (a) that no extra effort had to be expended by the operator/writer of the workflow to generate 'help' and visualization of dependencies, and (b) that the documentation of the workflow occurs _as a result_ of designing and writing it.\r\n\r\nThe coupling of writing the automation and documentation makes sake a sound choice for ...\r\n\r\n### Installation\r\nComing soon\r\n\r\n### How it works\r\nComing soon\r\n\r\n### The rules\r\nComing soon\r\n\r\n### Support or Contact\r\nIf you're having trouble using sake; have a question; or want to contribute,\r\nplease email me at tony.fischetti@gmail.com","google":"UA-46395813-1","note":"Don't delete this file! It's used internally to help with page regeneration."}